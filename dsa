 
 class HeapSortMax {
    
    
    private static void heapify(int[] arr, int n, int i) {
        int largest = i ;
        int left = 2 * i + 1;  
        int right = 2 * i + 2; 

        
        if (left < n && arr[left] > arr[largest])
            largest = left;

        
        if (right < n && arr[right] > arr[largest])
            largest = right;

        
        if (largest != i) {
            int swap = arr[i];
            arr[i] = arr[largest];
            arr[largest] = swap;

            
            heapify(arr, n, largest);
        }
    }

    // Function to build a Max Heap
    private static void buildMaxHeap(int[] arr) {
        int n = arr.length;
        
        for (int i = n / 2 - 1; i >= 0; i--) {
            heapify(arr, n, i);
        }
    }

    
    public static int getMax(int[] arr) {
        buildMaxHeap(arr);  
        return arr[0]; 
    }

    public static void main(String[] args) {
        int[] arr = {10, 45, 32, 15, 45, 76, 23};
        System.out.println("Maximum value in array: " + getMax(arr));
    }
}
